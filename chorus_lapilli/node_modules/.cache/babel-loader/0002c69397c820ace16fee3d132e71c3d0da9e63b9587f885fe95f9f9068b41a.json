{"ast":null,"code":"var _jsxFileName = \"/Users/catherinedi/shit/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction isAdjacent(srcIndex, destIndex) {\n  const srcRow = Math.floor(srcIndex / 3);\n  const srcCol = srcIndex % 3;\n  const destRow = Math.floor(destIndex / 3);\n  const destCol = destIndex % 3;\n  return Math.abs(srcRow - destRow) <= 1 && Math.abs(srcCol - destCol) <= 1;\n}\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  currentMove\n}) {\n  _s();\n  const [selectedSquare, setSelectedSquare] = useState(null);\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i] && currentMove < 6) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    const player = xIsNext ? 'X' : 'O';\n    if (currentMove >= 6 && xIsNext) {\n      if (selectedSquare === null && squares[i] === player) {\n        setSelectedX(i);\n        return;\n      } else if (selectedSquare !== null && squares[i] === null && isAdjacent(selectedSquare, i)) {\n        nextSquares[selectedSquare] = null;\n        nextSquares[i] = player;\n        setSelectedX(null);\n        onPlay(nextSquares);\n        return;\n      }\n    } else if (currentMove < 6) {\n      nextSquares[i] = player;\n      onPlay(nextSquares);\n    }\n  }\n  const winner = calculateWinner(squares);\n  const status = winner ? 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), Array.from({\n      length: 3\n    }).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array.from({\n        length: 3\n      }).map((_, col) => /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[row * 3 + col],\n        onSquareClick: () => handleClick(row * 3 + col)\n      }, row * 3 + col, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(Board, \"D0nj4StKrl+2TMSdkyqsPCoCL8U=\");\n_c2 = Board;\nfunction Game() {\n  _s2();\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null),\n    selectedSquare: null\n  }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove].squares;\n  const selectedSquare = history[currentMove].selectedSquare;\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), {\n      squares: nextSquares,\n      selectedSquare: null\n    }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function setSelectedSquare(index) {\n    const newHistory = [...history];\n    newHistory[currentMove] = {\n      ...newHistory[currentMove],\n      selectedSquare: index\n    };\n    setHistory(newHistory);\n  }\n  const moves = history.map((_, move) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => jumpTo(move),\n      children: move > 0 ? `Go to move #${move}` : 'Go to game start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, move, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game is rendering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        currentMove: currentMove,\n        selectedSquare: selectedSquare,\n        setSelectedSquare: setSelectedSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n}\n_s2(Game, \"dVGDlyLbBCkQw7pP/Ydb9e/8sHc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","isAdjacent","srcIndex","destIndex","srcRow","Math","floor","srcCol","destRow","destCol","abs","Board","xIsNext","squares","onPlay","currentMove","_s","selectedSquare","setSelectedSquare","handleClick","i","calculateWinner","nextSquares","slice","player","setSelectedX","winner","status","Array","from","length","map","_","row","col","_c2","Game","_s2","history","setHistory","fill","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","index","newHistory","moves","move","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/catherinedi/shit/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction isAdjacent(srcIndex, destIndex) {\n  const srcRow = Math.floor(srcIndex / 3);\n  const srcCol = srcIndex % 3;\n  const destRow = Math.floor(destIndex / 3);\n  const destCol = destIndex % 3;\n\n  return Math.abs(srcRow - destRow) <= 1 && Math.abs(srcCol - destCol) <= 1;\n}\n\nfunction Board({ xIsNext, squares, onPlay, currentMove }) {\n  const [selectedSquare, setSelectedSquare] = useState(null);\n\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i] && currentMove < 6) {\n      return;\n    }\n      const nextSquares = squares.slice();\n      const player = xIsNext ? 'X' : 'O'; \n\n    if (currentMove >= 6 && xIsNext) {\n      if (selectedSquare === null && squares[i] === player) {\n        setSelectedX(i);\n        return;\n      } else if (selectedSquare !== null && squares[i] === null && isAdjacent(selectedSquare, i)) {\n        nextSquares[selectedSquare] = null;\n        nextSquares[i] = player;\n        setSelectedX(null);\n        onPlay(nextSquares);\n        return;\n      }\n    } else if (currentMove < 6) {\n      nextSquares[i] = player;\n      onPlay(nextSquares);\n    }\n  }\n\n  const winner = calculateWinner(squares);\n  const status = winner ? 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {Array.from({ length: 3 }).map((_, row) => (\n        <div className=\"board-row\" key={row}>\n          {Array.from({ length: 3 }).map((_, col) => (\n            <Square key={row * 3 + col} value={squares[row * 3 + col]} onSquareClick={() => handleClick(row * 3 + col)} />\n          ))}\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction Game() {\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null), selectedSquare: null }]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n    const currentSquares = history[currentMove].squares;\n    const selectedSquare = history[currentMove].selectedSquare;\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), { squares: nextSquares, selectedSquare: null }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function setSelectedSquare(index) {\n  const newHistory = [...history];\n  newHistory[currentMove] = { ...newHistory[currentMove], selectedSquare: index };\n  setHistory(newHistory);\n}\n\n\n  const moves = history.map((_, move) => (\n    <li key={move}>\n      <button onClick={() => jumpTo(move)}>{move > 0 ? `Go to move #${move}` : 'Go to game start'}</button>\n    </li>\n  ));\n\n  return (\n      <div className=\"game\">\n\t   <h1>Game is rendering</h1>\n      <div className=\"game-board\">\n          <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} currentMove={currentMove}\n\t\t selectedSquare= {selectedSquare} setSelectedSquare={setSelectedSquare}\n\n\t  />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}