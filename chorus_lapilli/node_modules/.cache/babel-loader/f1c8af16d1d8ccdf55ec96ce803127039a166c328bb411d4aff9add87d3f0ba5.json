{"ast":null,"code":"var _jsxFileName = \"/Users/catherinedi/shit/src/App.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  moveNumber\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i] && moveNumber < 6) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    const player = xIsNext ? 'X' : 'O';\n    if (moveNumber >= 6) {\n      // Move rule for existing pieces\n      if (squares[i]) {\n        return; // Ignore clicks on non-empty squares\n      }\n      const originalIndex = findMovableIndex(i, squares, player);\n      if (originalIndex !== -1) {\n        nextSquares[originalIndex] = null; // Vacate the original square\n        nextSquares[i] = player; // Move to the clicked square\n      } else {\n        return; // Invalid move\n      }\n    } else {\n      // Normal placement of new pieces\n      nextSquares[i] = player;\n    }\n    onPlay(nextSquares);\n  }\n  function findMovableIndex(targetIndex, squares, player) {\n    const row = Math.floor(targetIndex / 3);\n    const col = targetIndex % 3;\n    const potentialOrigins = [targetIndex - 1,\n    // Left\n    targetIndex + 1,\n    // Right\n    targetIndex - 3,\n    // Up\n    targetIndex + 3,\n    // Down\n    targetIndex - 4,\n    // Upper left\n    targetIndex - 2,\n    // Upper right\n    targetIndex + 2,\n    // Lower left\n    targetIndex + 4 // Lower right\n    ].filter(index => index >= 0 && index < 9 && Math.floor(index / 3) !== row + 2 && Math.floor(index / 3) !== row - 2 && squares[index] === player);\n    return potentialOrigins.length > 0 ? potentialOrigins[0] : -1;\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  // Organize squares into rows for display\n  const renderSquare = i => /*#__PURE__*/_jsxDEV(Square, {\n    value: squares[i],\n    onSquareClick: () => handleClick(i)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(renderSquare)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [3, 4, 5].map(renderSquare)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [6, 7, 8].map(renderSquare)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Board","xIsNext","squares","onPlay","moveNumber","handleClick","i","calculateWinner","nextSquares","slice","player","originalIndex","findMovableIndex","targetIndex","row","Math","floor","col","potentialOrigins","filter","index","length","winner","status","renderSquare","_jsxDEV","Square","value","onSquareClick","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","children","className","map","_c","$RefreshReg$"],"sources":["/Users/catherinedi/shit/src/App.js"],"sourcesContent":["function Board({ xIsNext, squares, onPlay, moveNumber }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i] && moveNumber < 6) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    const player = xIsNext ? 'X' : 'O';\n\n    if (moveNumber >= 6) {\n      // Move rule for existing pieces\n      if (squares[i]) {\n        return; // Ignore clicks on non-empty squares\n      }\n\n      const originalIndex = findMovableIndex(i, squares, player);\n\n      if (originalIndex !== -1) {\n        nextSquares[originalIndex] = null; // Vacate the original square\n        nextSquares[i] = player; // Move to the clicked square\n      } else {\n        return; // Invalid move\n      }\n    } else {\n      // Normal placement of new pieces\n      nextSquares[i] = player;\n    }\n    \n    onPlay(nextSquares);\n  }\n\n  function findMovableIndex(targetIndex, squares, player) {\n    const row = Math.floor(targetIndex / 3);\n    const col = targetIndex % 3;\n    const potentialOrigins = [\n      targetIndex - 1, // Left\n      targetIndex + 1, // Right\n      targetIndex - 3, // Up\n      targetIndex + 3, // Down\n      targetIndex - 4, // Upper left\n      targetIndex - 2, // Upper right\n      targetIndex + 2, // Lower left\n      targetIndex + 4  // Lower right\n    ].filter(index => index >= 0 && index < 9 && Math.floor(index / 3) !== row + 2 && Math.floor(index / 3) !== row - 2 && squares[index] === player);\n\n    return potentialOrigins.length > 0 ? potentialOrigins[0] : -1;\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  // Organize squares into rows for display\n  const renderSquare = i => <Square key={i} value={squares[i]} onSquareClick={() => handleClick(i)} />;\n  \n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">{[0, 1, 2].map(renderSquare)}</div>\n      <div className=\"board-row\">{[3, 4, 5].map(renderSquare)}</div>\n      <div className=\"board-row\">{[6, 7, 8].map(renderSquare)}</div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}