{"ast":null,"code":"var _jsxFileName = \"/Users/catherinedi/shit/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  currentMove\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i] && currentMove < 6) {\n      return; // Prevent further action if there's a winner or square is already filled and not yet move phase\n    }\n    const nextSquares = squares.slice();\n    if (currentMove >= 6) {\n      // Special move logic\n      const originalIndex = squares.findIndex(s => s === (xIsNext ? 'X' : 'O'));\n      if (moveIsValid(originalIndex, i, squares)) {\n        nextSquares[originalIndex] = null; // Vacate original position\n        nextSquares[i] = xIsNext ? 'X' : 'O'; // Move to new position\n      } else {\n        return; // Ignore invalid moves\n      }\n    } else {\n      // Normal placement logic\n      nextSquares[i] = xIsNext ? 'X' : 'O';\n    }\n    onPlay(nextSquares);\n  }\n  function moveIsValid(originalIndex, newIndex, squares) {\n    const origRow = Math.floor(originalIndex / 3);\n    const origCol = originalIndex % 3;\n    const newRow = Math.floor(newIndex / 3);\n    const newCol = newIndex % 3;\n    if (Math.abs(origRow - newRow) <= 1 && Math.abs(origCol - newCol) <= 1) {\n      return squares[newIndex] === null; // Ensure new position is empty\n    }\n    return false;\n  }\n  const winner = calculateWinner(squares);\n  const status = winner ? `Winner: ${winner}` : `Next player: ${xIsNext ? 'X' : 'O'}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares.map((square, i) => /*#__PURE__*/_jsxDEV(Square, {\n        value: square,\n        onSquareClick: () => handleClick(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nfunction Game() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares]);\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXIsNext(!xIsNext);\n  }\n  const moves = history.map((step, move) => {\n    const desc = move ? `Go to move #${move}` : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  });\n  function jumpTo(move) {\n    setCurrentMove(move);\n    setXIsNext(move % 2 === 0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        currentMove: currentMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"okRVHJRbGlWwbwRvnd853Um8Ejo=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","currentMove","handleClick","i","calculateWinner","nextSquares","slice","originalIndex","findIndex","s","moveIsValid","newIndex","origRow","Math","floor","origCol","newRow","newCol","abs","winner","status","map","square","_c2","Game","_s","setXIsNext","history","setHistory","Array","fill","setCurrentMove","currentSquares","handlePlay","nextHistory","concat","length","moves","step","move","desc","jumpTo","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/catherinedi/shit/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay, currentMove }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || (squares[i] && currentMove < 6)) {\n      return; // Prevent further action if there's a winner or square is already filled and not yet move phase\n    }\n    const nextSquares = squares.slice();\n    \n    if (currentMove >= 6) {\n      // Special move logic\n      const originalIndex = squares.findIndex(s => s === (xIsNext ? 'X' : 'O'));\n      if (moveIsValid(originalIndex, i, squares)) {\n        nextSquares[originalIndex] = null; // Vacate original position\n        nextSquares[i] = xIsNext ? 'X' : 'O'; // Move to new position\n      } else {\n        return; // Ignore invalid moves\n      }\n    } else {\n      // Normal placement logic\n      nextSquares[i] = xIsNext ? 'X' : 'O';\n    }\n    \n    onPlay(nextSquares);\n  }\n\n  function moveIsValid(originalIndex, newIndex, squares) {\n    const origRow = Math.floor(originalIndex / 3);\n    const origCol = originalIndex % 3;\n    const newRow = Math.floor(newIndex / 3);\n    const newCol = newIndex % 3;\n    \n    if (Math.abs(origRow - newRow) <= 1 && Math.abs(origCol - newCol) <= 1) {\n      return squares[newIndex] === null; // Ensure new position is empty\n    }\n    return false;\n  }\n\n  const winner = calculateWinner(squares);\n  const status = winner ? `Winner: ${winner}` : `Next player: ${xIsNext ? 'X' : 'O'}`;\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {squares.map((square, i) => (\n          <Square key={i} value={square} onSquareClick={() => handleClick(i)} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nfunction Game() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares]);\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXIsNext(!xIsNext);\n  }\n\n  const moves = history.map((step, move) => {\n    const desc = move ? `Go to move #${move}` : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  function jumpTo(move) {\n    setCurrentMove(move);\n    setXIsNext(move % 2 === 0);\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} currentMove={currentMove} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}