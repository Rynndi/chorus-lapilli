{"ast":null,"code":"var _jsxFileName = \"/Users/catherinedi/ticTac/src/App.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  // Function to render a single square\n  function Square({\n    value\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to render rows of squares\n  const renderRow = row => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array.from({\n        length: 3\n      }, (_, i) => i + 1 + row * 3).map(value => /*#__PURE__*/_jsxDEV(Square, {\n        value: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Array.from({\n      length: 3\n    }, (_, i) => renderRow(i))\n  }, void 0, false);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Board","Square","value","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderRow","row","Array","from","length","_","i","map","_Fragment","_c","$RefreshReg$"],"sources":["/Users/catherinedi/ticTac/src/App.js"],"sourcesContent":["export default function Board() {\n  // Function to render a single square\n  function Square({ value }) {\n    return <button className=\"square\">{value}</button>;\n  }\n\n  // Function to render rows of squares\n  const renderRow = (row) => {\n    return (\n      <div className=\"board-row\">\n        {Array.from({ length: 3 }, (_, i) => i + 1 + row * 3).map(value => (\n          <Square key={value} value={value} />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {Array.from({ length: 3 }, (_, i) => renderRow(i))}\n    </>\n  );\n}\n"],"mappings":";;AAAA,eAAe,SAASA,KAAKA,CAAA,EAAG;EAC9B;EACA,SAASC,MAAMA,CAAC;IAAEC;EAAM,CAAC,EAAE;IACzB,oBAAOC,OAAA;MAAQC,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAEH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EACpD;;EAEA;EACA,MAAMC,SAAS,GAAIC,GAAG,IAAK;IACzB,oBACER,OAAA;MAAKC,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBO,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,GAAGL,GAAG,GAAG,CAAC,CAAC,CAACM,GAAG,CAACf,KAAK,iBAC7DC,OAAA,CAACF,MAAM;QAAaC,KAAK,EAAEA;MAAM,GAApBA,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACEN,OAAA,CAAAe,SAAA;IAAAb,QAAA,EACGO,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKN,SAAS,CAACM,CAAC,CAAC;EAAC,gBAClD,CAAC;AAEP;AAACG,EAAA,GAtBuBnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}